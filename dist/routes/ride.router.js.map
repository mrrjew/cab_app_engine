{"version":3,"file":"ride.router.js","sourceRoot":"/","sources":["routes/ride.router.ts"],"names":[],"mappings":";;;AAAA,8DAAgD;AAChD,oCAAqC;AACrC,6EAA+C;AAE/C,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAC,iBAAU,EAAE,UAAe,GAAwB,EAAE,GAAY;;QAC9F,MAAM,KAAK,GAAG,MAAM,kBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAA;QACrE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACpC,CAAC;CAAA,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,iBAAU,EAAE,UAAgB,GAA4B,EAAE,GAAa;;QACjG,IAAG;YACH,MAAM,KAAK,GAAG,MAAM,kBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAA;YACvE,wDAAwD;YACxD,gGAAgG;YAChG,MAAM;YACN,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;YAEpC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SAChC;QAAA,OAAM,CAAC,EAAC;YACP,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,+BAA+B,CAAC,EAAE,EAAC,CAAC,CAAA;SACxE;IACH,CAAC;CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QACzF,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IAC9D,CAAC;CAAA,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,iBAAU,EAAE,UAAgB,GAA4B,EAAE,GAAa;;QAChG,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7D,CAAC;CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,iBAAU,EAAE,UAAgB,GAA4B,EAAE,GAAa;;QAChG,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7D,CAAC;CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAA","sourcesContent":["import express,{Request,Response} from \"express\"\r\nimport { appContext } from \"../start\"\r\nimport setContext from \"../middlewares/context\"\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/rider-ride-history',setContext, async function(req:Request & {user:any}, res:Response){\r\n    const rides = await appContext.models.Ride.find({rider:req.user._id})\r\n    return res.status(200).json(rides)\r\n  })\r\n  \r\n  router.get('/current-ride', setContext, async function (req: Request & { user: any }, res: Response) {\r\n    try{\r\n    const rides = await appContext.models.Ride.find({rider:req.user._id})\r\n  //   const ride = await appContext.models.Ride.findOne({\r\n  //   $and: [{ riderId: req.user._id }, { $or: [{ status: 'PENDING' }, { status: 'ONGOING' }] }],\r\n  // });\r\n  const ride = [...rides].reverse()[0]\r\n\r\n  return res.status(200).json(ride)\r\n  }catch(e){\r\n    return res.status(500).json({error:`error getting current ride: ${e}`})\r\n  }\r\n});\r\n\r\nrouter.post('/ride-request', setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.RideService.requestRide(req,res)\r\n})\r\n\r\nrouter.put('/update-ride', setContext, async function (req: Request & { user: any }, res: Response) {\r\n  await appContext.services.RideService.updateRide(req, res);\r\n});\r\n\r\nrouter.put('/cancel-ride', setContext, async function (req: Request & { user: any }, res: Response) {\r\n  await appContext.services.RideService.cancelRide(req, res);\r\n});\r\n\r\nexport default router"]}
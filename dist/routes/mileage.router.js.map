{"version":3,"file":"mileage.router.js","sourceRoot":"/","sources":["routes/mileage.router.ts"],"names":[],"mappings":";;;AAAA,8DAAoD;AACpD,6EAA+C;AAC/C,oCAAqC;AACrC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAC,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QAC1F,MAAM,kBAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IAC3E,CAAC;CAAA,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAC,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QACvF,MAAM,kBAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IACvE,CAAC;CAAA,CAAC,CAAA;AACF,MAAM,CAAC,IAAI,CAAC,cAAc,EAAC,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QACvF,MAAM,kBAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IAChE,CAAC;CAAA,CAAC,CAAA;AACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAC,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QAC1F,MAAM,kBAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IACnE,CAAC;CAAA,CAAC,CAAA;AACF,MAAM,CAAC,IAAI,CAAC,eAAe,EAAC,iBAAU,EAAC,UAAe,GAAwB,EAAE,GAAY;;QACxF,MAAM,kBAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC,CAAA;IAChE,CAAC;CAAA,CAAC,CAAA;AAEF,kBAAe,MAAM,CAAA","sourcesContent":["import express, { Request, Response } from 'express'\r\nimport setContext from '../middlewares/context'\r\nimport { appContext } from '../start'\r\nconst router = express.Router()\r\n\r\nrouter.get('/current-mileage',setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.MileageService.getUserCurrentMileage(req,res)\r\n})\r\n\r\nrouter.get('/all-mileages',setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.MileageService.getUserAllMileage(req,res)\r\n})\r\nrouter.post('/buy-mileage',setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.MileageService.buyMileage(req,res)\r\n})\r\nrouter.post('/verify-payment',setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.MileageService.verifyPayment(req,res)\r\n})\r\nrouter.post('/pay-for-ride',setContext,async function(req:Request & {user:any}, res:Response){\r\n    await appContext.services.MileageService.payForRide(req,res)\r\n})\r\n\r\nexport default router"]}
{"version":3,"file":"app.js","sourceRoot":"/","sources":["types/app.ts"],"names":[],"mappings":";;;AAOA,MAAqB,QAAQ;IAG3B,YAAY,OAAoB;QAC9B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEK,iBAAiB,CAAC,MAAW;;YACjC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;YAErE,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC3C;YAED,OAAO,IAAI,CAAA;QACb,CAAC;KAAA;CAEF;AAlBD,2BAkBC","sourcesContent":["import { IModels } from '../models';\nimport { IServices } from '../services';\nexport interface IAppContext {\n  models?: IModels;\n  services?: IServices;\n}\n\nexport default class IService {\n  models?: IModels;\n  context?: IAppContext;\n  constructor(context: IAppContext) {\n    this.models = context.models;\n    this.context = context;\n  }\n\n  async authenticate_user(userId: any) {\n    const user = await this.context.models.User.findOne({ _id: userId });\n\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n\n    return user\n  }\n\n}\n"]}
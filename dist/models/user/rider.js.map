{"version":3,"file":"rider.js","sourceRoot":"/","sources":["models/user/rider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Schema, model, CallbackError } from 'mongoose';\nimport { IUserDocument } from '../../types/user/user';\nimport code from 'otp-generator'\nimport bcrypt from 'bcrypt';\n\nexport const privateField = ['password', '__v', 'verificationCode', 'passwordResetCode', 'verified'];\n\nconst riderSchema = new Schema<IUserDocument>(\n  {\n    firstname: { type: String },\n    lastname: { type: String },\n    othernames: { type: String },\n    email: { type: String },\n    phoneNumber: { type: String, required: true },\n    password: { type: String },\n    verificationCode: {\n      type: String,\n      required: true,\n      default: () => code.generate(4, { upperCaseAlphabets: false, specialChars: false, lowerCaseAlphabets: false }),\n    },\n    passwordResetCode: { type: String },\n    verified: { type: Boolean, required: true, default: false },\n    profile: {\n      avatar: { type: String },\n      basicInformation: { type: String },\n    },\n    settings: {\n      // General Settings\n      language: { type: String, enum: ['EN', 'FR', 'ES', 'DE', 'ZH', 'JA', 'KO'], default: 'EN' },\n      theme: { type: String, enum: ['LIGHT', 'DARK'], default: 'LIGHT' },\n      notificationEnabled: { type: Boolean, default: true },\n      soundEnabled: { type: Boolean, default: true },\n      autoSaveInterval: { type: Number, default: 10 },\n\n      // Privacy Settings\n      profileVisibility: { type: String, enum: ['PUBLIC', 'PRIVATE'], default: 'PUBLIC' },\n      contactInfoVisibility: { type: String, enum: ['PUBLIC', 'PRIVATE'], default: 'PUBLIC' },\n      locationSharingEnabled: { type: Boolean, default: true },\n      activityTrackingEnabled: { type: Boolean, default: true },\n      dataSharingEnabled: { type: Boolean, default: true },\n      dataRetentionPeriod: { type: Number, default: 365 },\n\n      // Security Settings\n      twoFactorAuthEnabled: { type: Boolean, default: false },\n      dataEncryptionEnabled: { type: Boolean, default: false },\n    },\n    latitude: { type: Number, required: false },\n    longitude: { type: Number, required: false }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nriderSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  try {\n    const salt = await bcrypt.genSalt(10);\n    const hash = await bcrypt.hash(this.password, salt);\n    this.password = hash;\n    next();\n  } catch (err) {\n    next(err as CallbackError);\n  }\n});\n\nriderSchema.methods.validatePassword = async function (pass: string) {\n  return bcrypt.compare(pass, this.password);\n};\n\nconst Rider = model('Driver', riderSchema);\n\nexport default Rider;\n"]}
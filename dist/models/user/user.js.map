{"version":3,"file":"user.js","sourceRoot":"/","sources":["models/user/user.ts"],"names":[],"mappings":";;;;AAAA,uCAAwD;AAExD,0EAAgC;AAChC,4DAA4B;AAEf,QAAA,YAAY,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,UAAU,CAAC,CAAC;AAErG,MAAM,UAAU,GAAG,IAAI,iBAAM,CAC3B;IACE,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC3B,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1B,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC5B,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACvB,WAAW,EAAC,EAAC,IAAI,EAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC;IACvC,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAC,WAAW,CAAC,EAAE;IACpD,gBAAgB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,uBAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAC,kBAAkB,EAAC,KAAK,EAAC,YAAY,EAAC,KAAK,EAAC,kBAAkB,EAAC,KAAK,EAAC,CAAC,EAAE;IAC1J,iBAAiB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACnC,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC,KAAK,EAAE;IAC1D,OAAO,EAAE;QACP,MAAM,EAAC,EAAE,IAAI,EAAE,MAAM,EAAC;QACtB,gBAAgB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC;QACjC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC;QAC1B,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC;QAC/B,oBAAoB,EAAC;YACnB,aAAa,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC;YAC5B,QAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC;SACxB;QACD,cAAc,EAAE;YACd,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC;YACpB,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC;YACpB,WAAW,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC;YAC1B,qBAAqB,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC;SACrC;KACD;IACF,MAAM,EAAE,CAAC;YACP,OAAO,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;YACxC,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YAC1B,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;YACvD,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,mBAAmB;SAC/C,CAAC;IACF,QAAQ,EAAE;QACR,mBAAmB;QACnB,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;QAC3F,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE;QAClE,mBAAmB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;QACrD,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;QAC9C,gBAAgB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;QAE/C,mBAAmB;QACnB,iBAAiB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;QACnF,qBAAqB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;QACvF,sBAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;QACxD,uBAAuB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;QACzD,kBAAkB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;QACpD,mBAAmB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE;QAEnD,oBAAoB;QACpB,oBAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;QACvD,qBAAqB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;KACzD;IACD,QAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAC;IACxC,SAAS,EAAC,EAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAC;CAC1C,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,UAAgB,IAAI;;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAAE,OAAO,IAAI,EAAE,CAAC;QAChD,IAAI;YACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACtC,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,EAAE,CAAC;SACR;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,CAAC,GAAoB,CAAC,CAAC;SAC5B;IACH,CAAC;CAAA,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,gBAAgB,GAAG,UAAgB,IAAY;;QAChE,OAAO,gBAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;CAAA,CAAC;AAEF,MAAM,IAAI,GAAG,IAAA,gBAAK,EAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAEvC,kBAAe,IAAI,CAAC","sourcesContent":["import { Schema, model, CallbackError } from 'mongoose';\nimport { IUserDocument } from '../../types/user/user';\nimport code from 'otp-generator'\nimport bcrypt from 'bcrypt';\n\nexport const privateField = ['password', '__v', 'verificationCode', 'passwordResetCode', 'verified'];\n\nconst userSchema = new Schema<IUserDocument>(\n  {\n    firstname: { type: String },\n    lastname: { type: String },\n    othernames: { type: String },\n    email: { type: String },\n    phoneNumber:{type:String,required:true},\n    password: { type: String },\n    type: { type: String, enum: ['DRIVER','PASSENGER'] },\n    verificationCode: { type: String, required: true, default: () => code.generate(4,{upperCaseAlphabets:false,specialChars:false,lowerCaseAlphabets:false}) },\n    passwordResetCode: { type: String },\n    verified: { type: Boolean, required: true, default:false },\n    profile: {\n      avatar:{ type: String}, \n      basicInformation: { type: String},\n      ghanaCard: { type: String},\n      driversLicense: { type: String},\n      driverPaymentDetails:{\n        accountNumber:{type: String},\n        bankCode:{type: String},\n      },\n      vehicleDetails: {\n        brand: {type:String},\n        model: {type:String},\n        numberPlate: {type:String},\n        additionalInformation: {type:String},\n      }\n     },\n    rating: [{\n      ratedBy: { type: Schema.Types.ObjectId }, // User who is giving the rating\n      criteria: { type: String }, // Criteria for the rating (e.g., professionalism, communication)\n      score: { type: Number, required: true, min: 1, max: 5 }, // Rating score (1 to 5)\n      comment: { type: String }, // Optional comment\n    }],\n    settings: {\n      // General Settings\n      language: { type: String, enum: ['EN', 'FR', 'ES', 'DE', 'ZH', 'JA', 'KO'], default: 'EN' },\n      theme: { type: String, enum: ['LIGHT', 'DARK'], default: 'LIGHT' },\n      notificationEnabled: { type: Boolean, default: true },\n      soundEnabled: { type: Boolean, default: true },\n      autoSaveInterval: { type: Number, default: 10 },\n\n      // Privacy Settings\n      profileVisibility: { type: String, enum: ['PUBLIC', 'PRIVATE'], default: 'PUBLIC' },\n      contactInfoVisibility: { type: String, enum: ['PUBLIC', 'PRIVATE'], default: 'PUBLIC' },\n      locationSharingEnabled: { type: Boolean, default: true },\n      activityTrackingEnabled: { type: Boolean, default: true },\n      dataSharingEnabled: { type: Boolean, default: true },\n      dataRetentionPeriod: { type: Number, default: 365 },\n\n      // Security Settings\n      twoFactorAuthEnabled: { type: Boolean, default: false },\n      dataEncryptionEnabled: { type: Boolean, default: false },\n    },\n    latitude:{type: Number, required: false},\n    longitude:{type: Number, required: false},\n  },\n  {\n    timestamps: true,\n  }\n);\n\nuserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  try {\n    const salt = await bcrypt.genSalt(10);\n    const hash = await bcrypt.hash(this.password, salt);\n    this.password = hash;\n    next();\n  } catch (err) {\n    next(err as CallbackError);\n  }\n});\n\nuserSchema.methods.validatePassword = async function (pass: string) {\n  return bcrypt.compare(pass, this.password);\n};\n\nconst User = model('User', userSchema);\n\nexport default User;\n"]}
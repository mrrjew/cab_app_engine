{"version":3,"file":"mileage.js","sourceRoot":"/","sources":["models/mileage.ts"],"names":[],"mappings":";;AAAA,uCAAyC;AAEzC,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,KAAK,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;IACpE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC,EAAC;IACjD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC,EAAC;IAChC,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC/B,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC3B,MAAM,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC,SAAS,EAAC,UAAU,EAAC,UAAU,EAAC,WAAW,CAAC,EAAE,OAAO,EAAC,SAAS,EAAC;CAC5F,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,OAAO,GAAG,IAAA,gBAAK,EAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAChD,kBAAe,OAAO,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\n\r\nconst mileageSchema = new Schema(\r\n  {\r\n    rider: { type: Schema.Types.ObjectId, required: true, ref: 'rider' },\r\n    value: { type: Number, required: true ,default:0},\r\n    used: { type: Number, default:0},\r\n    transactionId: { type: String },\r\n    reference: { type: String },\r\n    status: {type:String,enum:['PENDING','CREDITED','REJECTED','EXHAUSTED'], default:'PENDING'}\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Mileage = model('Mileage', mileageSchema);\r\nexport default Mileage;\r\n"]}
{"version":3,"file":"ride.js","sourceRoot":"/","sources":["models/ride.ts"],"names":[],"mappings":";;;AAAA,6DAA4C;AAG5C,MAAM,UAAU,GAAG,IAAI,kBAAQ,CAAC,MAAM,CACpC;IACE,MAAM,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE;IACtD,KAAK,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;IACpE,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACpG,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,cAAc,EAAE;QACd,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC3C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC1C,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;KAC1B;IACD,WAAW,EAAE;QACX,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC3C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC1C,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;KAC1B;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QACtC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;KACxC;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;QACtC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;KACxC;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAC,MAAM,EAAC,UAAU,CAAC,CAAA;AAC9C,kBAAe,IAAI,CAAA","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\nimport { IRideDocument } from \"../types/ride\";\n\nconst rideSchema = new mongoose.Schema<IRideDocument>(\n  {\n    driver: { type: Schema.Types.ObjectId, ref: 'Driver' },\n    rider: { type: Schema.Types.ObjectId, required: true, ref: 'Rider' },\n    status: { type: String, enum: ['PENDING', 'ONGOING', 'COMPLETED', 'CANCELLED'], default: 'PENDING' },\n    mileage: { type: Number, required: true },\n    pickupLocation: {\n      longitude: { type: String, required: true },\n      latitude: { type: String, required: true },\n      address: { type: String },\n    },\n    destination: {\n      longitude: { type: String, required: true },\n      latitude: { type: String, required: true },\n      address: { type: String },\n    },\n    distance: {\n      text: { type: String, required: true },\n      value: { type: String, required: true },\n    },\n    duration: {\n      text: { type: String, required: true },\n      value: { type: String, required: true },\n    },\n  },\n  { timestamps: true }\n);\n\nconst Ride = mongoose.model(\"Ride\",rideSchema)\nexport default Ride"]}
{"version":3,"file":"ride.js","sourceRoot":"/","sources":["services/ride.ts"],"names":[],"mappings":"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","sourcesContent":["import IService, { IAppContext } from '../types/app';\nimport { google } from 'googleapis';\nimport { Server } from 'socket.io';\nimport config from '../config';\nimport axios from 'axios';\n\nexport default class RideService extends IService {\n  private io: Server;\n\n  constructor(props: IAppContext, httpServer: any) {\n    super(props);\n    this.io = new Server(httpServer);\n    this.initializeSocketEvents();\n  }\n\n  private initializeSocketEvents() {\n    this.io.on('connection', (socket) => {\n      console.log('A user connected');\n\n      socket.on('disconnect', () => {\n        console.log('User disconnected');\n      });\n    });\n  }\n\n  private async calculateDistance(origin: string, destination: string) {\n    try {\n      const apiUrl = `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${origin}&destinations=${destination}&key=${config.maps.api_key}`;\n      const response = await axios.get(apiUrl);\n      const distance = response.data.rows[0].elements[0].distance;\n      const time = response.data.rows[0].elements[0].duration;\n      console.log(`Distance from ${origin} to ${destination}: ${distance.text} in ${time.text}`);\n      return {distance,time};\n    } catch (error) {\n      console.error('Error fetching distance:', error);\n      throw new Error('Error fetching distance');\n    }\n  }\n\n  private async findAvailableDrivers(origin: string) {\n    try {\n      const response = await axios.get('http://localhost:8080/driver/get-closer-drivers', {\n        params: { origin },\n      });\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async requestRide(req: any, res: any) {\n    const user = await this.authenticate_rider(req.user._id);\n\n    if (!user) {\n      return res.status(404).send('User not authenticated');\n    }\n\n    const { pickupLocation, destination } = req.body;\n\n    if (!pickupLocation || !destination) {\n      return res.status(400).send('Missing required fields');\n    }\n\n    try {\n       const origin = `${pickupLocation.latitude},${pickupLocation.longitude}`;\n       const dest = `${destination.latitude},${destination.longitude}`;\n\n      const response = await this.calculateDistance(origin, dest);\n\n      const ride = await this.models.Ride.create({\n        rider: req.user._id,\n        pickupLocation,\n        destination,\n        distance: { text: response.distance.text, value: response.distance.value },\n        duration: { text: response.time.text, value: response.time.value },\n        mileage: +response.distance.value * 0.000621371,\n      });\n\n      await ride.save();\n\n      this.io.emit('newRide', { message: 'New ride request', ride });\n\n      return res.status(201).json({ message: 'Ride created', ride });\n    } catch (error) {\n      console.error('Error creating ride:', error.message);\n      return res.status(500).send('Error creating ride');\n    }\n  }\n\n  async assignDriver(req: any, res: any) {\n    const { _id, pickupLocation } = req.body;\n\n    try {\n      const availableDrivers = await this.findAvailableDrivers(pickupLocation);\n\n      const driversWithDistance = await Promise.all(\n        availableDrivers.map(async (driver: any) => {\n          const distance = await this.calculateDistance(driver.location, pickupLocation);\n          return { driver, distance };\n        })\n      );\n\n      driversWithDistance.sort((a, b) => a.distance - b.distance);\n\n      const closestDriver = driversWithDistance[0].driver;\n\n      await this.models.Ride.findByIdAndUpdate(_id, { driver: closestDriver });\n      return res.status(200).send('Driver assigned successfully');\n    } catch (error) {\n      console.error('Error assigning driver:', error);\n      return res.status(500).send('Error assigning driver');\n    }\n  }\n\n  async updateRide(req: any, res: any) {\n    try {\n      const ride = await this.authenticate_ride(req.params.id);\n\n      await ride.updateOne({ $set: { ...req.body } }, { new: true, upsert: true });\n\n      await ride.save();\n      return res.status(200).send('Edited ride successfully');\n    } catch (error) {\n      console.error('Error editing ride:', error);\n      return res.status(500).send(`Error editing ride: ${error}`);\n    }\n  }\n\n  async deleteRide(req: any, res: any) {\n    try {\n      const ride = await this.authenticate_ride(req.params.id);\n\n      await ride.deleteOne();\n\n      return res.status(200).send('Deleted ride successfully');\n    } catch (error) {\n      console.error('Error deleting ride:', error);\n      return res.status(500).send(`Error deleting ride: ${error}`);\n    }\n  }\n}\n"]}